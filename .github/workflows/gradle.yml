name: gradle-ci

on: [push, pull_request, workflow_dispatch]

jobs:
  build-gradle-project:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: unittests
          POSTGRES_PASSWORD: password
          POSTGRES_PORT: 5432
          POSTGRES_USER: unittests
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    env:
      GRADLE_OPTS: "-Dorg.gradle.jvmargs=-XX:MaxMetaspaceSize=512m"
      MYSQL_DATABASE: unittests
      MYSQL_USER: root
      MYSQL_PASSWORD: root

    strategy:
      matrix:
        java-version: [ 19 ]

    steps:
      - name: Set up MySQL
        run: |
          sudo /etc/init.d/mysql start
          mysql -e "CREATE DATABASE ${{ env.MYSQL_DATABASE }};" -u${{ env.MYSQL_USER }} -p${{ env.MYSQL_PASSWORD }}
          mysql -e "CREATE USER 'unittests'@'localhost' IDENTIFIED BY 'password';" -u${{ env.MYSQL_USER }} -p${{ env.MYSQL_PASSWORD }}
          mysql -e "GRANT ALL PRIVILEGES ON *.* TO 'unittests'@'localhost' WITH GRANT OPTION;" -u${{ env.MYSQL_USER }} -p${{ env.MYSQL_PASSWORD }}
          mysql -e "FLUSH PRIVILEGES;" -u${{ env.MYSQL_USER }} -p${{ env.MYSQL_PASSWORD }}

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java-version }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Test with Gradle
        run: ./gradlew -Dtest.postgres=true -Dtest.mysql=true  clean :lib:test --stacktrace --tests TestGenericQueryManagerManyToMany