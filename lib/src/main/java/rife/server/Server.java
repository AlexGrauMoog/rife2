/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package rife.server;

import jakarta.servlet.DispatcherType;
import org.eclipse.jetty.server.Connector;
import org.eclipse.jetty.server.ServerConnector;
import org.eclipse.jetty.servlet.FilterHolder;
import org.eclipse.jetty.servlet.ServletHandler;
import rife.config.RifeConfig;
import rife.engine.Site;
import rife.engine.SiteInit;
import rife.servlet.RifeFilter;

import java.util.EnumSet;

public class Server {
    private final org.eclipse.jetty.server.Server server_ = new org.eclipse.jetty.server.Server();
    private final ServletHandler handler_ = new ServletHandler();

    public Server port(int port) {
        RifeConfig.server().port(port);
        return this;
    }

    public void start(Site site) {
        try (var connector = new ServerConnector(server_)) {
            connector.setPort(RifeConfig.server().port());
            server_.setConnectors(new Connector[]{connector});
        }

        server_.setHandler(handler_);

        var filter = new RifeFilter();
        filter.site(site);
        var filter_holder = new FilterHolder(filter);
        handler_.addFilterWithMapping(filter_holder, "/*", EnumSet.of(DispatcherType.REQUEST));

        try {
            server_.start();
        } catch (Exception e) {
            throw new RuntimeException(e);
        }
    }
}
